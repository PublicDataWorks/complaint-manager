version: 2
jobs:
    test:
        docker:
          - image: kkarczmarczyk/node-yarn
        steps:
          - checkout
          - run:
              name: Install Dependencies
              command: yarn install
          - run:
              name: Run Tests
              command: yarn test

    build-and-publish:
        docker:
          - image: docker:stable
        steps:
          - checkout
          - setup_remote_docker
          - run: docker login -u $DOCKER_USER -p $DOCKER_PASSWORD
          - run: docker build -t noipm/complaint-manager:$CIRCLE_SHA1 .
          - run: docker push noipm/complaint-manager:$CIRCLE_SHA1

    deploy-staging:
        docker:
          - image: docker:stable
        steps:
          - setup_remote_docker
          - run: docker login -u $DOCKER_USER -p $DOCKER_PASSWORD
          - run: docker pull noipm/complaint-manager:$CIRCLE_SHA1
          - run:
              name: Migrate and Seed DB
              command: |
                docker run \
                -e NODE_ENV=staging \
                -e DATABASE_USERNAME=$STAGING_DATABASE_USERNAME \
                -e DATABASE_PASS=$STAGING_DATABASE_PASS \
                -e DATABASE_NAME=$STAGING_DATABASE_NAME \
                -e DATABASE_HOST=$STAGING_DATABASE_HOST \
                noipm/complaint-manager:$CIRCLE_SHA1 setup:db

          - run: docker login --username=$HEROKU_USER --password=$HEROKU_API_KEY registry.heroku.com
          - run: docker tag noipm/complaint-manager:$CIRCLE_SHA1 registry.heroku.com/noipm-staging/web
          - run: docker push registry.heroku.com/noipm-staging/web

    e2e-testing:
        docker:
          - image: noipm/nightwatch-chrome:latest
        steps:
          - checkout
          - run:
              name: Run E2E tests
              command: cd e2e && nightwatch --env $ENVIRONMENT

    deploy-to-prod:
        docker:
          - image: docker:stable
        steps:
          - setup_remote_docker
          - run: docker login -u $DOCKER_USER -p $DOCKER_PASSWORD
          - run: docker pull noipm/complaint-manager:$CIRCLE_SHA1
          - run: docker login --username=$HEROKU_USER --password=$HEROKU_API_KEY registry.heroku.com
          - run: docker tag noipm/complaint-manager:$CIRCLE_SHA1 registry.heroku.com/noipm-production/web
          - run: docker push registry.heroku.com/noipm-production/web


workflows:
  version: 2
  build_and_deploy:
    jobs:
      - test
      - build-and-publish:
          requires:
            - test
      - deploy-staging:
          requires:
            - build-and-publish
      - e2e-testing:
          requires:
            - deploy-staging
      - hold:
          type: approval
          requires:
            - e2e-testing
      - deploy-to-prod:
          requires:
            - hold

