version: "3"

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile.web
      args:
        - REACT_APP_ENV=static_development
        - REACT_APP_GOOGLE_API_KEY
    environment:
      - NODE_ENV=development
      - REACT_APP_ENV=development
      - NEW_RELIC_ENABLED=false
      - NEW_RELIC_NO_CONFIG_FILE=true
      - REACT_APP_GOOGLE_API_KEY
    depends_on:
      - db
      - worker
    ports:
      - "1234:1234"
      - "443:443"
      - "4000:4000"
#      Expose this port if using Node inspect flag for debugging purposes
#     - "9229:9229"
    entrypoint: ["./wait-for-it.sh", "db:5432", "--"]
    command: ["yarn", "start:dev"]
    volumes:
#      Mount this volume if you want to run a static front end on localhost:1234
#      - ./build:/app/build
      - ./src:/app/src
  app-e2e:
    build:
      context: .
      dockerfile: Dockerfile.web
      args:
        - REACT_APP_ENV=static_development
        - REACT_APP_GOOGLE_API_KEY
    environment:
      - NODE_ENV=development
      - REACT_APP_ENV=development_e2e
      - NEW_RELIC_ENABLED=false
      - NEW_RELIC_NO_CONFIG_FILE=true
      - REACT_APP_GOOGLE_API_KEY
    depends_on:
      - db
      - worker
    ports:
      - "1234:1234"
      - "443:443"
      - "4000:4000"
    entrypoint: ["./wait-for-it.sh", "db:5432", "--"]
    command: ["yarn", "start:dev"]
    volumes:
      - ./src:/app/src
      - "./e2e/.env.development:/app/.env.development"
  worker:
    build:
      context: .
      dockerfile: Dockerfile.worker
    environment:
      - NODE_ENV=development
      - NEW_RELIC_ENABLED=false
      - NEW_RELIC_NO_CONFIG_FILE=true
    depends_on:
      - db
      - redis
    ports:
      - "4567:4567"
      - "5000:5000"
    entrypoint: ["./wait-for-it.sh", "db:5432", "--"]
    command: ["yarn", "start:worker:dev"]
    volumes:
      - ./src:/app/src
      - ./package.json:/app/package.json
      - ./node_modules:/app/node_modules
  db:
    image: postgres:10.9-alpine
    environment:
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
  #    volumes:
  #      - ./postgres-data:/var/lib/postgresql/data
  e2e:
    image: noipm/e2e:latest
    depends_on:
      - app-e2e
    volumes:
      - "./e2e/tests:/tests"
      - "./e2e/pageObjectModels:/pageObjectModels"
      - "./e2e/nightwatch.conf.js:/nightwatch.conf.js"
      - "./wait-for-it.sh:/wait-for-it.sh"
    entrypoint: ["./wait-for-it.sh", "app-e2e:443", "--"]
    command: ["nightwatch", "--env", "local"]
    environment:
      - TEST_USER=${TEST_USER}
      - TEST_PASS=${TEST_PASS}
  redis:
    image: redis
    ports:
      - "6379:6379"
  schemaspy:
    image: schemaspy/schemaspy:latest
    depends_on:
      - db
    volumes:
      - "./schemaspy/complaint-manager/output:/output"
      - "./schemaspy/complaint-manager/schemaspy.properties:/schemaspy.properties"
  security-checks:
    image: hawkeyesec/scanner-cli:latest
    volumes:
      - ".:/target"
    working_dir: "/target"
    entrypoint: ["/bin/sh"]
    command: ["./scripts/security-checks.sh"]
